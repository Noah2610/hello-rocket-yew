#!/bin/bash

# shellcheck source=./share.sh
_dir="$( dirname "$0" )"
source "${_dir}/share.sh"
unset _dir

set -e

check "cargo-web"

# Build with `cargo-web`
function build_web {
  check "sed"

  # Generate js and wasm files using `cargo-web`
  cargo web build             \
    --package "$FRONTEND_BIN" \
    --bin "$FRONTEND_BIN"     \
    --runtime "$JS_RUNTIME"   \
    $CARGO_ARGS

  # Now prepend all occurences of the wasm filename
  # with the path for serving static files (`/static`), using `sed`.
  local target_dir="${ROOT}/target/${WASM_TARGET}/${PROFILE}"
  check_dir "$target_dir"
  local wasm_filename="${FRONTEND_BIN}.wasm"
  local wasm_url="/static/${wasm_filename}"
  local wasm_filename_escaped
  local wasm_url_escaped
  wasm_filename_escaped="$( sed_escape "$wasm_filename" )"
  wasm_url_escaped="$( sed_escape "$wasm_url" )"
  for js_file in "${target_dir}"/*.js; do
    sed -i \
      "s/${wasm_filename_escaped}/${wasm_url_escaped}/g" \
      "$js_file"
  done
}

# Copy generated js and wasm files to backend directory
function copy_files {
  [ -d "$STATIC_BACKEND" ] || mkdir -p "$STATIC_BACKEND"

  local target_dir="${ROOT}/target/${WASM_TARGET}/${PROFILE}"
  check_dir "$target_dir"

  # Copy files generated by `cargo-web` to the backend's static directory
  cp                       \
    "${target_dir}"/*.js   \
    "${target_dir}"/*.wasm \
    "$STATIC_BACKEND"
  # Also copy the frontend's static directory's files, if static files exist
  if [ -d "$STATIC_FRONTEND" ] && [ -n "$( ls "$STATIC_FRONTEND" )" ]; then
    cp -r                    \
      "${STATIC_FRONTEND}"/* \
      "$STATIC_BACKEND"
  fi
}

build_web
copy_files
